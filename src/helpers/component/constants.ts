import {
  StyleMapper,
  LayoutDirection,
  LayoutJustify,
  LayoutAlignItems,
  LayoutOverflow,
  LayoutWrap,
} from './types';

export const styleMapper: StyleMapper = {
  BorderColor: (value) => ({ borderColor: value as string }),
  BorderStyle: (value) => ({ borderStyle: value as string }),
  BorderThickness: (value) => ({ borderWidth: `${value as number}px` }),
  Color: (value) => ({ color: value as string }),
  Fill: (value) => ({ backgroundColor: value as string }),
  FocusedBorderColor: (value) => ({ outlineColor: value as string }),
  Height: (value) => ({ height: `${value as number}px` }),
  PaddingBottom: (value) => ({ paddingBottom: `${value as number}px` }),
  PaddingLeft: (value) => ({ paddingLeft: `${value as number}px` }),
  PaddingRight: (value) => ({ paddingRight: `${value as number}px` }),
  PaddingTop: (value) => ({ paddingTop: `${value as number}px` }),
  PressedBorderColor: (value) => ({ borderColor: value as string }),
  PressedColor: (value) => ({ color: value as string }),
  PressedFill: (value) => ({ backgroundColor: value as string }),
  Visible: (value) => ({ display: value === false ? 'none' : 'block' }),
  Width: (value) => ({ width: `${value as number}px` }),
  X: (value) => ({ left: `${value as number}px` }),
  Y: (value) => ({ top: `${value as number}px` }),
  LayoutDirection: (value) => ({ flexDirection: value as LayoutDirection }),
  LayoutJustify: (value) => ({ justifyContent: value as LayoutJustify }),
  LayoutAlignItems: (value) => ({ alignItems: value as LayoutAlignItems }),
  LayoutGap: (value) => ({ gap: `${value as number}px` }),
  LayoutOverflowX: (value) => ({ overflowX: value as LayoutOverflow }),
  LayoutOverflowY: (value) => ({ overflowY: value as LayoutOverflow }),
  LayoutWrap: (value) => ({ flexWrap: value as LayoutWrap }),
  LayoutMinHeight: (value) => ({ minHeight: `${value as number}px` }),
  LayoutMinWidth: (value) => ({ minWidth: `${value as number}px` }),
  LayoutMaxHeight: (value) => ({ maxHeight: `${value as number}px` }),
  LayoutMaxWidth: (value) => ({ maxWidth: `${value as number}px` }),
  FillPortions: (value) => ({ flex: value as number, display: 'flex' }),
  DropShadow: (value) => ({ boxShadow: `0 0 10px ${value}` }),
  RadiusTopLeft: (value) => ({ borderTopLeftRadius: `${value}px` }),
  RadiusTopRight: (value) => ({ borderTopRightRadius: `${value}px` }),
  RadiusBottomLeft: (value) => ({ borderBottomLeftRadius: `${value}px` }),
  RadiusBottomRight: (value) => ({ borderBottomRightRadius: `${value}px` }),
};
